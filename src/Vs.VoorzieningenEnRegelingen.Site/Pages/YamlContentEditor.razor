@inherits MenuHoldingPage
@page "/YamlContentEditor"
@attribute [Authorize]
<div id="splitcontainer" class="clear-fix row no-gutters splitter-content-editor">
    <div id="left-half_contenteditor" style="display: flex; flex-direction: column; height: inherit;">

        @if (ShowTabs)
        {
            <ul class="nav nav-tabs">
                @foreach (var key in keysVisibleTabs)
                {
                    var editorTabInfo = EditorTabController.EditorTabInfos[key];

                    <li class="nav-item" @key="@key">
                        <a class="nav-link@(editorTabInfo.IsActive ? " active" : string.Empty)" @onclick="(() => SwitchToTab(key))">
                            @if (key != keysVisibleTabs.First()) //do not show left if it is the first tab
                            {
                                <i class="fa fa-chevron-left fa-small" @onclick="(() => MoveTabLeft(key))" @onclick:stopPropagation></i>
                            }
                            @((MarkupString)editorTabInfo.DisplayName)
                            @if (key != keysVisibleTabs.Last()) //do not show right if it is the last tab
                            {
                                <i class="fa fa-chevron-right fa-small" @onclick="(() => MoveTabRight(key))" @onclick:stopPropagation></i>
                            }
                            <i class="fa fa-window-close" @onclick="(() => CloseTab(key))" @onclick:stopPropagation></i>
                        </a>
                    </li>
                }
            </ul>
            <div class="tab-content">
                @{
                    var activeEditorTabInfo = EditorTabController.GetTabByTabId(ActiveTab);

                    <div @key="@activeEditorTabInfo.TabId" class="tab-pane @(activeEditorTabInfo.IsActive ? " active" : string.Empty)">

                        @if (!activeEditorTabInfo.IsCompareMode)
                        {
                            <div class="left-half_header sm-12">
                                <div class="editorErrorGlyphWrapper @(activeEditorTabInfo.HasExceptions ? "on" : "off")">
                                    <i class="editorErrorGlyph fa fa-exclamation-circle"></i>
                                </div>
                                <div>Naam: <strong>@activeEditorTabInfo.Name</strong></div>
                                <div>Type: <strong>@activeEditorTabInfo.Type</strong></div>
                            </div>
                            <div class="left-half_bottom">
                                <MonacoEditorYaml @ref="activeEditorTabInfo.MonacoEditorYaml"
                                                  Id="@(activeEditorTabInfo.EditorId)"
                                                  Value="@activeEditorTabInfo.Content"
                                                  OnKeyUp="@(() => RegisterContentModification(ActiveTab))"
                                                  OnDidPaste="@(() => {
                                                                    BlazorMonacoYaml.Helpers.DeltaDecorationHelper.ResetDeltaDecorations(activeEditorTabInfo.MonacoEditorYaml.MonacoEditor);
                                                                    RegisterContentModification(ActiveTab);
                                                                })"
                                                  OnDidInit="TabIsInitialised"
                                                  CssClass="editor" />

                            </div>
                        }
                        else
                        {
                            <div class="left-half_header sm-12">
                                <div class="editorErrorGlyphWrapper"></div>
                                <div>Naam: <strong>@activeEditorTabInfo.CompareInfo.Name</strong></div>
                                <div>Type: <strong>@activeEditorTabInfo.CompareInfo.Type</strong></div>
                                <div><i class="fa fa-window-close" @onclick="(() => CloseDiff(ActiveTab))"></i></div>
                            </div>
                            <div class="left-half_header sm-12">
                                <div class="editorErrorGlyphWrapper"></div>
                                <div>Naam: <strong>@activeEditorTabInfo.Name</strong></div>
                                <div>Type: <strong>@activeEditorTabInfo.Type</strong></div>
                            </div>
                            <div class="left-half_bottom">
                                <MonacoDiffEditorYaml @ref="activeEditorTabInfo.MonacoDiffEditorYaml"
                                                      Id="@($"{activeEditorTabInfo.EditorId}_diff")"
                                                      OriginalValue="@(activeEditorTabInfo.CompareContent)"
                                                      ModifiedValue="@(activeEditorTabInfo.Content)"
                                                      OnKeyUp="@(() => RegisterContentModification(ActiveTab, true))"
                                                      OnDidInit="TabCompareIsInitialised"
                                                      CssClass="editor" />
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>
    <div id="right-half_contenteditor">
        <div class="submit">
            <Table Grid="YamFileInfoGrid" />
        </div>
    </div>
</div>
<Modal Id="newYamlModal" Cancel="Annuleren" Ok="Ok" OnOk="AddNewTab" Title="Selecteer het type Yaml document voor het nieuwe document.">
    <YamlTypeSelector @ref="_yamlTypeSelector" Name="ValidateRuleType" />
</Modal>
<Modal Id="saveAsYamlModal" Cancel="Annuleren" Ok="Opslaan" OnOk="CheckOVerWrite" Title="Bestand opslaan">
    Vul de naam in van het document
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-default">Naam</span>
        </div>
        <input type="text" class="form-control" aria-label="Naam" aria-describedby="Naam" @bind="SaveAsName">
    </div>
</Modal>
<Modal Id="overWriteModal" Cancel="Annuleren" Ok="Ja" OnOk="ConfirmSaveAsYaml" Title="Bestand overschrijven">
    Er bestaat reeds een bestand met naam '@SaveAsName' voor het type '@CurrentType'.<br />
    Weet u zeker dat u deze wilt overschrijven?
</Modal>
<Modal Id="reloadModal" Cancel="Annuleren" Ok="Ja" OnOk="ConfirmReload" Title="Bestand overschrijven">
    De file die u probeert te openen is reeds geopend.<br />
    Weet u zeker dat u de inhoud opnieuw wilt laden?
</Modal>
